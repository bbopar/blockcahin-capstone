// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const VerifierContract = artifacts.require('Verifier');

// require proof json
const proof = require('./proof.json');

// - use the contents from proof.json generated from zokrates steps
contract('TestVerifier', async (accounts) => {

    let account_1 = accounts[0];

    describe('TestingSquareVerifier', () => {
        beforeEach(async () => {
            try {
                this.contract = await VerifierContract.new({ from: account_1 });
            } catch (error) {
                console.log('error:::', error);
            }
        })

        // Test verification with correct proof
        it('should test verification with correct proof', async () => {
            try {
                let result = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs);
                assert.equal(result, true, "Should be correct proof");
            } catch (error) {
                console.log('error', error);
            }
        });


        // Test verification with incorrect proof
        it('should test verification with incorrect proof', async () => {
            try {
                let res = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, ["0x0011", "0x1122"]);
                assert.equal(res, false, "Incorrect proof")
            } catch (error) {
                console.log('error:', error);
            }
        });
    });
});

