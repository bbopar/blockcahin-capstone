{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractOwner",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SolutionSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractOwner",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ownerShip",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "solutions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSubmited",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "submittedSolutions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSubmited",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "mintSol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SolutionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownerShip\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mintSol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"solutions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSubmited\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"submittedSolutions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSubmited\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd537590025f941d049d457578e30b669a3c8d8f5183bf701592dc1acb627dacd\",\"urls\":[\"bzz-raw://53790ee87779d31c98d98185a0aea69d4e30138a49ae1390631247197f557e8f\",\"dweb:/ipfs/QmfEahP8QpAroezhwjvNhjZyxqkpZU13E6V8VoPNztfcWL\"]},\"/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xbc09473344c30b950c13cdd432dc0a162ebf26324c7c154835c568b157c58c05\",\"urls\":[\"bzz-raw://372eebc6e43daa9b4a1d78ef5d28f6f8c9d827935f2983c7e5769bab289f570e\",\"dweb:/ipfs/QmVzX4EbHpS4C2Hp6cJmqBju2rmvf7G7bLokEJ92MjEgdJ\"]},\"/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0x73971277c8993957f1f64287a54d9617b75570aed62c378ba89a43feb8dd6d26\",\"urls\":[\"bzz-raw://e74763febdda3c3df689a4f65011667c11082beef37eab617a1bd4c26d3e8193\",\"dweb:/ipfs/QmSKZHHk7q6RcPKGGcNF9EFZAYZ1NqcU579tEgbkNTTB7K\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601481526020017f4861766546756e5573696e67536f6c69646974790000000000000000000000008152506040518060400160405280600481526020017f48465553000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f8152602001620046c1603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9e38ac15fb6f429cb4c1d68a79943e344c4ce37b43debdea3555daa570f5361033604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1620001c26301ffc9a760e01b6200025e60201b60201c565b620001da6380ac58cd60e01b6200025e60201b60201c565b620001f263780e9d6360e01b6200025e60201b60201c565b82600f90805190602001906200020a929190620002fe565b50816010908051906020019062000223929190620002fe565b5080601190805190602001906200023c929190620002fe565b5062000255635b5e139f60e01b6200025e60201b60201c565b505050620003ad565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200029257600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034157805160ff191683800117855562000372565b8280016001018555821562000372579182015b828111156200037157825182559160200191906001019062000354565b5b50905062000381919062000385565b5090565b620003aa91905b80821115620003a65760008160009055506001016200038c565b5090565b90565b61430480620003bd6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063621e9ec0116100f9578063a22cb46511610097578063bdc32be011610071578063bdc32be014610eb6578063c87b56dd14610f39578063e985e9c514610fe0578063f2fde38b1461105c576101c4565b8063a22cb46514610ce1578063b71698c714610d31578063b88d4fde14610db1576101c4565b80638456cb59116100d35780638456cb5914610b8a57806384b533d714610b94578063893d20e814610c1457806395d89b4114610c5e576101c4565b8063621e9ec01461094b5780636352211e14610ac457806370a0823114610b32576101c4565b80632b8bbbe81161016657806340c10f191161014057806340c10f19146106ca57806342842e0e146107305780634f6ccce71461079e57806358dac4e7146107e0576101c4565b80632b8bbbe8146104be5780632f745c591461050c57806338bbfa501461056e576101c4565b8063095ea7b3116101a2578063095ea7b31461031f57806318160ddd1461036d57806323b872dd1461038b57806327dc297e146103f9576101c4565b806301ffc9a7146101c957806306fdde031461022e578063081812fc146102b1575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506110a0565b604051808215151515815260200191505060405180910390f35b610236611108565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027657808201518184015260208101905061025b565b50505050905090810190601f1680156102a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102dd600480360360208110156102c757600080fd5b81019080803590602001909291905050506111aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611262565b005b610375611458565b6040518082815260200191505060405180910390f35b6103f7600480360360608110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611465565b005b6104bc6004803603604081101561040f57600080fd5b81019080803590602001909291908035906020019064010000000081111561043657600080fd5b82018360208201111561044857600080fd5b8035906020019184600183028401116401000000008311171561046a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611488565b005b61050a600480360360408110156104d457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cb565b005b6105586004803603604081101561052257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a3565b6040518082815260200191505060405180910390f35b6106c86004803603606081101561058457600080fd5b8101908080359060200190929190803590602001906401000000008111156105ab57600080fd5b8201836020820111156105bd57600080fd5b803590602001918460018302840111640100000000831117156105df57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064257600080fd5b82018360208201111561065457600080fd5b8035906020019184600183028401116401000000008311171561067657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611716565b005b610716600480360360408110156106e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061171b565b604051808215151515815260200191505060405180910390f35b61079c6004803603606081101561074657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611793565b005b6107ca600480360360208110156107b457600080fd5b81019080803590602001909291905050506117b3565b6040518082815260200191505060405180910390f35b61094960048036036101608110156107f757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108ac578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610858565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291905050506117e7565b005b610aaa600480360361014081101561096257600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610a17578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109c3565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611918565b604051808215151515815260200191505060405180910390f35b610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050611b14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b7460048036036020811015610b4857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b51565b6040518082815260200191505060405180910390f35b610b92611ba1565b005b610bc060048036036020811015610baa57600080fd5b8101908080359060200190929190505050611cfd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b610c1c611d54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c66611d7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ca6578082015181840152602081019050610c8b565b50505050905090810190601f168015610cd35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d2f60048036036040811015610cf757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611e1f565b005b610d5d60048036036020811015610d4757600080fd5b8101908080359060200190929190505050611f59565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b610eb460048036036080811015610dc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e2e57600080fd5b820183602082011115610e4057600080fd5b80359060200191846001830284011164010000000083111715610e6257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611fbd565b005b610ebe611fe3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610efe578082015181840152602081019050610ee3565b50505050905090810190601f168015610f2b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f6560048036036020811015610f4f57600080fd5b8101908080359060200190929190505050612085565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fa5578082015181840152602081019050610f8a565b50505050905090810190601f168015610fd25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61104260048036036040811015610ff657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061214c565b604051808215151515815260200191505060405180910390f35b61109e6004803603602081101561107257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121e0565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a05780601f10611175576101008083540402835291602001916111a0565b820191906000526020600020905b81548152906001019060200180831161118357829003601f168201915b5050505050905090565b60006111b58261227c565b611227576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061126d82611b14565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806142ad6023913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113345750611333813361214c565b5b6113a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f556e617574686f72697a6564000000000000000000000000000000000000000081525060200191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b61146f33826122ee565b61147857600080fd5b611483838383612383565b505050565b6114c7828260006040519080825280601f01601f1916602001820160405280156114c15781602001600182028038833980820191505090505b50611716565b5050565b6114d3614046565b60405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250905080601460008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908315150217905550905050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055505050507f329e271c3661a59f0033b686a9a95b6691445bf3b5707e10995a485a6fafd68e8383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050565b60006116ae83611b51565b82106116b957600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061170357fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461177657600080fd5b61178083836123a7565b611789826123c8565b6001905092915050565b6117ae83838360405180602001604052806000815250611fbd565b505050565b60006117bd611458565b82106117c857600080fd5b600882815481106117d557fe5b90600052602060002001549050919050565b6117f385858585611918565b611865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420736f6c7574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6014600082815260200190815260200160002060010160149054906101000a900460ff16156118fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f416c7265616479207375626d697474656400000000000000000000000000000081525060200191505060405180910390fd5b61190681336114cb565b611910338261171b565b505050505050565b600061192261407f565b60405180604001604052808760006002811061193a57fe5b602002015181526020018760016002811061195157fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061198457fe5b602002015160006002811061199557fe5b60200201518152602001886000600281106119ac57fe5b60200201516001600281106119bd57fe5b602002015181525081526020016040518060400160405280886001600281106119e257fe5b60200201516000600281106119f357fe5b6020020151815260200188600160028110611a0a57fe5b6020020151600160028110611a1b57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611a4657fe5b6020020151815260200185600160028110611a5d57fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611a9f5781602001602082028038833980820191505090505b50905060008090505b6002811015611ae757848160028110611abd57fe5b6020020151828281518110611ace57fe5b6020026020010181815250508080600101915050611aa8565b506000611af4828461251f565b1415611b0557600192505050611b0c565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b9a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612691565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bfa57600080fd5b600060149054906101000a900460ff1615611c7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436f6e747261637420737461746520756e70617573656400000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60146020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e155780601f10611dea57610100808354040283529160200191611e15565b820191906000526020600020905b815481529060010190602001808311611df857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e5857600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60138181548110611f6657fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b611fc8848484611465565b611fd48484848461269f565b611fdd57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561207b5780601f106120505761010080835404028352916020019161207b565b820191906000526020600020905b81548152906001019060200180831161205e57829003601f168201915b5050505050905090565b60606120908261227c565b61209957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121405780601f1061211557610100808354040283529160200191612140565b820191906000526020600020905b81548152906001019060200180831161212357829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461223957600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806122fa83611b14565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061236957508373ffffffffffffffffffffffffffffffffffffffff16612351846111aa565b73ffffffffffffffffffffffffffffffffffffffff16145b8061237a5750612379818561214c565b5b91505092915050565b61238e838383612888565b6123988382612b1d565b6123a28282612cbb565b505050565b6123b18282612d82565b6123bb8282612cbb565b6123c481612f99565b5050565b6123d18161227c565b612443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b606061244e82612fe5565b90506124f460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124e95780601f106124be576101008083540402835291602001916124e9565b820191906000526020600020905b8154815290600101906020018083116124cc57829003601f168201915b505050505082613112565b60126000848152602001908152602001600020908051906020019061251a9291906140b2565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061254d614132565b612555613156565b905080608001515160018651011461256c57600080fd5b612574614179565b6040518060400160405280600081526020016000815250905060008090505b865181101561260a57838782815181106125a957fe5b6020026020010151106125bb57600080fd5b6125fb826125f6856080015160018501815181106125d557fe5b60200260200101518a85815181106125e957fe5b60200260200101516135a4565b613636565b91508080600101915050612593565b5061262d81836080015160008151811061262057fe5b6020026020010151613636565b905061267385600001518660200151612645846136e7565b85604001516126578a604001516136e7565b876060015161266989600001516136e7565b8960200151613781565b612683576001935050505061268b565b600093505050505b92915050565b600081600001549050919050565b60006126c08473ffffffffffffffffffffffffffffffffffffffff166138e5565b6126cd5760019050612880565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127a857808201518184015260208101905061278d565b50505050905090810190601f1680156127d55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156127f757600080fd5b505af115801561280b573d6000803e3d6000fd5b505050506040513d602081101561282157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166128a882611b14565b73ffffffffffffffffffffffffffffffffffffffff1614612931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f596f752061726520746f6b656e20616e206f776e65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b6129dd81613930565b612a24600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139ee565b612a6b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a11565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612b756001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613a2790919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612c62576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612be257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612c3a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612cb49190614193565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b612e2e8161227c565b15612ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20616c72656164792065786973740000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612f3a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a11565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561302d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061310d565b600082905060005b60008214613057578080600101915050600a828161304f57fe5b049150613035565b6060816040519080825280601f01601f19166020018201604052801561308c5781602001600182028038833980820191505090505b50905060006001830390505b6000861461310557600a86816130aa57fe5b0660300160f81b828280600190039350815181106130c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816130fd57fe5b049550613098565b819450505050505b919050565b606061314e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613a71565b905092915050565b61315e614132565b60405180604001604052807f2de773ab0474a36e74843dd48498676644053ca474f6cdaf3913d0734f0701f781526020017f0ab60519186ce941d270ab6026801b94f4a1820783a81f9a9a23359b166819118152508160000181905250604051806040016040528060405180604001604052807f1d724f17e37d154ad2cf6810ff68215eb33314993aeb7dc9b666337a6d24ee7981526020017f2dc886e3123a7303094fb251134b4720b9dc1c88c62dabcca48406089ea417ea815250815260200160405180604001604052807f2f359f17d38244c337a0d87c782b6fd352c527ab61a8b5ed6e163a05c02c8ae981526020017f23b06ed6bbb36c7f1ad41c119e6e8efc660229f4c3900765c88c306f56e7f7be8152508152508160200181905250604051806040016040528060405180604001604052807f2e090493792f139abc13264f8f023313c5b2dbc5e1baccb7ae677e974e6fbc2681526020017f14f481034e31b6d1af13acfaaaa0f515d35746f1098170a9633b957294fccf4a815250815260200160405180604001604052807f08f7aec3fd6fc5d5e852743078b3a999bd7b31216bba97066720768ef8ea4b5b81526020017f0b69f7c81741bd0ac5aaa0eeb7498f2ca86692971c5b83a8d54768ae5993ab7c8152508152508160400181905250604051806040016040528060405180604001604052807f0b9d44b082ef50952456830db86adba8fa023b785155154a6d5a916c7046a22481526020017f2073946d0bc341fc58b730de1184f1013c1dbbe8cfe1622027be0758c60bf5fe815250815260200160405180604001604052807f12da4a5e9fca3a3545ba57cb1caee98c553a30b502240b4c4de34350dacddcb281526020017f2c136493ddf06151524735f77a66a09cb9e632787e64c45a089163df83d00eeb8152508152508160600181905250600360405190808252806020026020018201604052801561344557816020015b6134326141bf565b81526020019060019003908161342a5790505b50816080018190525060405180604001604052807f20bda63768f8506a84806821893c964107903a24738b7bbef4eb184d7b78274d81526020017f02f92d9fc80c5d309b630c3190fab56cda6c5077eccebcc690f0a51dc418527981525081608001516000815181106134b457fe5b602002602001018190525060405180604001604052807f18f0702035258a916f66d5629e1339c9f7222c3f4caf9841f9a5140a5c0a280181526020017f2a687c2de601030e2f0c12bdd1687b41dd1e186371d138591ade1a42347f7434815250816080015160018151811061352557fe5b602002602001018190525060405180604001604052807f1b43bf991ae311c1168cafd719bb0cdd562e474282a1151fdee947eccf6e1c4681526020017f0defdb0e720e5f5f2cdb1e31e4b500fd47e42aeac68c137b0db4a58845f81fed815250816080015160028151811061359657fe5b602002602001018190525090565b6135ac614179565b6135b46141d9565b8360000151816000600381106135c657fe5b6020020181815250508360200151816001600381106135e157fe5b60200201818152505082816002600381106135f857fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461362157613623565bfe5b508061362e57600080fd5b505092915050565b61363e614179565b6136466141fb565b83600001518160006004811061365857fe5b60200201818152505083602001518160016004811061367357fe5b60200201818152505082600001518160026004811061368e57fe5b6020020181815250508260200151816003600481106136a957fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146136d2576136d4565bfe5b50806136df57600080fd5b505092915050565b6136ef614179565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561372c575060008360200151145b1561375057604051806040016040528060008152602001600081525091505061377c565b6040518060400160405280846000015181526020018285602001518161377257fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156137c057816020015b6137ad6141bf565b8152602001906001900390816137a55790505b5090506060600460405190808252806020026020018201604052801561380057816020015b6137ed61421d565b8152602001906001900390816137e55790505b5090508a8260008151811061381157fe5b6020026020010181905250888260018151811061382a57fe5b6020026020010181905250868260028151811061384357fe5b6020026020010181905250848260038151811061385c57fe5b6020026020010181905250898160008151811061387557fe5b6020026020010181905250878160018151811061388e57fe5b602002602001018190525085816002815181106138a757fe5b602002602001018190525083816003815181106138c057fe5b60200260200101819052506138d58282613d33565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561392757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146139eb5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613a0660018260000154613a2790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613a6983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613f86565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613acd5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613b5257888181518110613af957fe5b602001015160f81c60f81b838380600101945081518110613b1657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ae4565b600090505b8751811015613bc557878181518110613b6c57fe5b602001015160f81c60f81b838380600101945081518110613b8957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613b57565b600090505b8651811015613c3857868181518110613bdf57fe5b602001015160f81c60f81b838380600101945081518110613bfc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613bca565b600090505b8551811015613cab57858181518110613c5257fe5b602001015160f81c60f81b838380600101945081518110613c6f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c3d565b600090505b8451811015613d1e57848181518110613cc557fe5b602001015160f81c60f81b838380600101945081518110613ce257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613cb0565b82995050505050505050505095945050505050565b60008151835114613d4357600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613d825781602001602082028038833980820191505090505b50905060008090505b83811015613f2857868181518110613d9f57fe5b602002602001015160000151826000600684020181518110613dbd57fe5b602002602001018181525050868181518110613dd557fe5b602002602001015160200151826001600684020181518110613df357fe5b602002602001018181525050858181518110613e0b57fe5b602002602001015160000151600160028110613e2357fe5b6020020151826002600684020181518110613e3a57fe5b602002602001018181525050858181518110613e5257fe5b602002602001015160000151600060028110613e6a57fe5b6020020151826003600684020181518110613e8157fe5b602002602001018181525050858181518110613e9957fe5b602002602001015160200151600160028110613eb157fe5b6020020151826004600684020181518110613ec857fe5b602002602001018181525050858181518110613ee057fe5b602002602001015160200151600060028110613ef857fe5b6020020151826005600684020181518110613f0f57fe5b6020026020010181815250508080600101915050613d8b565b50613f31614243565b6000602082602086026020860160086107d05a03fa90508060008114613f5657613f58565bfe5b5080613f6357600080fd5b600082600060018110613f7257fe5b602002015114159550505050505092915050565b6000838311158290614033576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ff8578082015181840152602081019050613fdd565b50505050905090810190601f1680156140255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b60405180606001604052806140926141bf565b815260200161409f61421d565b81526020016140ac6141bf565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106140f357805160ff1916838001178555614121565b82800160010185558215614121579182015b82811115614120578251825591602001919060010190614105565b5b50905061412e9190614265565b5090565b6040518060a001604052806141456141bf565b815260200161415261421d565b815260200161415f61421d565b815260200161416c61421d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141ba578183600052602060002091820191016141b99190614265565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061423061428a565b815260200161423d61428a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61428791905b8082111561428357600081600090555060010161426b565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe416464726573732063616e2774206265206f776e6572206f662074686520746f6b656ea265627a7a72315820d11e425d94752fef05b92984774a92e0321f06ef024ef00efc70c2076a28eebb64736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063621e9ec0116100f9578063a22cb46511610097578063bdc32be011610071578063bdc32be014610eb6578063c87b56dd14610f39578063e985e9c514610fe0578063f2fde38b1461105c576101c4565b8063a22cb46514610ce1578063b71698c714610d31578063b88d4fde14610db1576101c4565b80638456cb59116100d35780638456cb5914610b8a57806384b533d714610b94578063893d20e814610c1457806395d89b4114610c5e576101c4565b8063621e9ec01461094b5780636352211e14610ac457806370a0823114610b32576101c4565b80632b8bbbe81161016657806340c10f191161014057806340c10f19146106ca57806342842e0e146107305780634f6ccce71461079e57806358dac4e7146107e0576101c4565b80632b8bbbe8146104be5780632f745c591461050c57806338bbfa501461056e576101c4565b8063095ea7b3116101a2578063095ea7b31461031f57806318160ddd1461036d57806323b872dd1461038b57806327dc297e146103f9576101c4565b806301ffc9a7146101c957806306fdde031461022e578063081812fc146102b1575b600080fd5b610214600480360360208110156101df57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506110a0565b604051808215151515815260200191505060405180910390f35b610236611108565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027657808201518184015260208101905061025b565b50505050905090810190601f1680156102a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102dd600480360360208110156102c757600080fd5b81019080803590602001909291905050506111aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611262565b005b610375611458565b6040518082815260200191505060405180910390f35b6103f7600480360360608110156103a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611465565b005b6104bc6004803603604081101561040f57600080fd5b81019080803590602001909291908035906020019064010000000081111561043657600080fd5b82018360208201111561044857600080fd5b8035906020019184600183028401116401000000008311171561046a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611488565b005b61050a600480360360408110156104d457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cb565b005b6105586004803603604081101561052257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a3565b6040518082815260200191505060405180910390f35b6106c86004803603606081101561058457600080fd5b8101908080359060200190929190803590602001906401000000008111156105ab57600080fd5b8201836020820111156105bd57600080fd5b803590602001918460018302840111640100000000831117156105df57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064257600080fd5b82018360208201111561065457600080fd5b8035906020019184600183028401116401000000008311171561067657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611716565b005b610716600480360360408110156106e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061171b565b604051808215151515815260200191505060405180910390f35b61079c6004803603606081101561074657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611793565b005b6107ca600480360360208110156107b457600080fd5b81019080803590602001909291905050506117b3565b6040518082815260200191505060405180910390f35b61094960048036036101608110156107f757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108ac578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610858565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291905050506117e7565b005b610aaa600480360361014081101561096257600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610a17578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109c3565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611918565b604051808215151515815260200191505060405180910390f35b610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050611b14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b7460048036036020811015610b4857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b51565b6040518082815260200191505060405180910390f35b610b92611ba1565b005b610bc060048036036020811015610baa57600080fd5b8101908080359060200190929190505050611cfd565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b610c1c611d54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c66611d7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ca6578082015181840152602081019050610c8b565b50505050905090810190601f168015610cd35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d2f60048036036040811015610cf757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611e1f565b005b610d5d60048036036020811015610d4757600080fd5b8101908080359060200190929190505050611f59565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390f35b610eb460048036036080811015610dc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e2e57600080fd5b820183602082011115610e4057600080fd5b80359060200191846001830284011164010000000083111715610e6257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611fbd565b005b610ebe611fe3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610efe578082015181840152602081019050610ee3565b50505050905090810190601f168015610f2b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f6560048036036020811015610f4f57600080fd5b8101908080359060200190929190505050612085565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fa5578082015181840152602081019050610f8a565b50505050905090810190601f168015610fd25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61104260048036036040811015610ff657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061214c565b604051808215151515815260200191505060405180910390f35b61109e6004803603602081101561107257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121e0565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a05780601f10611175576101008083540402835291602001916111a0565b820191906000526020600020905b81548152906001019060200180831161118357829003601f168201915b5050505050905090565b60006111b58261227c565b611227576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061126d82611b14565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806142ad6023913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113345750611333813361214c565b5b6113a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f556e617574686f72697a6564000000000000000000000000000000000000000081525060200191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b61146f33826122ee565b61147857600080fd5b611483838383612383565b505050565b6114c7828260006040519080825280601f01601f1916602001820160405280156114c15781602001600182028038833980820191505090505b50611716565b5050565b6114d3614046565b60405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250905080601460008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908315150217905550905050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055505050507f329e271c3661a59f0033b686a9a95b6691445bf3b5707e10995a485a6fafd68e8383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050565b60006116ae83611b51565b82106116b957600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061170357fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461177657600080fd5b61178083836123a7565b611789826123c8565b6001905092915050565b6117ae83838360405180602001604052806000815250611fbd565b505050565b60006117bd611458565b82106117c857600080fd5b600882815481106117d557fe5b90600052602060002001549050919050565b6117f385858585611918565b611865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420736f6c7574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6014600082815260200190815260200160002060010160149054906101000a900460ff16156118fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f416c7265616479207375626d697474656400000000000000000000000000000081525060200191505060405180910390fd5b61190681336114cb565b611910338261171b565b505050505050565b600061192261407f565b60405180604001604052808760006002811061193a57fe5b602002015181526020018760016002811061195157fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061198457fe5b602002015160006002811061199557fe5b60200201518152602001886000600281106119ac57fe5b60200201516001600281106119bd57fe5b602002015181525081526020016040518060400160405280886001600281106119e257fe5b60200201516000600281106119f357fe5b6020020151815260200188600160028110611a0a57fe5b6020020151600160028110611a1b57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611a4657fe5b6020020151815260200185600160028110611a5d57fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611a9f5781602001602082028038833980820191505090505b50905060008090505b6002811015611ae757848160028110611abd57fe5b6020020151828281518110611ace57fe5b6020026020010181815250508080600101915050611aa8565b506000611af4828461251f565b1415611b0557600192505050611b0c565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b9a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612691565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bfa57600080fd5b600060149054906101000a900460ff1615611c7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436f6e747261637420737461746520756e70617573656400000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60146020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e155780601f10611dea57610100808354040283529160200191611e15565b820191906000526020600020905b815481529060010190602001808311611df857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e5857600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60138181548110611f6657fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b611fc8848484611465565b611fd48484848461269f565b611fdd57600080fd5b50505050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561207b5780601f106120505761010080835404028352916020019161207b565b820191906000526020600020905b81548152906001019060200180831161205e57829003601f168201915b5050505050905090565b60606120908261227c565b61209957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121405780601f1061211557610100808354040283529160200191612140565b820191906000526020600020905b81548152906001019060200180831161212357829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461223957600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806122fa83611b14565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061236957508373ffffffffffffffffffffffffffffffffffffffff16612351846111aa565b73ffffffffffffffffffffffffffffffffffffffff16145b8061237a5750612379818561214c565b5b91505092915050565b61238e838383612888565b6123988382612b1d565b6123a28282612cbb565b505050565b6123b18282612d82565b6123bb8282612cbb565b6123c481612f99565b5050565b6123d18161227c565b612443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b606061244e82612fe5565b90506124f460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124e95780601f106124be576101008083540402835291602001916124e9565b820191906000526020600020905b8154815290600101906020018083116124cc57829003601f168201915b505050505082613112565b60126000848152602001908152602001600020908051906020019061251a9291906140b2565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905061254d614132565b612555613156565b905080608001515160018651011461256c57600080fd5b612574614179565b6040518060400160405280600081526020016000815250905060008090505b865181101561260a57838782815181106125a957fe5b6020026020010151106125bb57600080fd5b6125fb826125f6856080015160018501815181106125d557fe5b60200260200101518a85815181106125e957fe5b60200260200101516135a4565b613636565b91508080600101915050612593565b5061262d81836080015160008151811061262057fe5b6020026020010151613636565b905061267385600001518660200151612645846136e7565b85604001516126578a604001516136e7565b876060015161266989600001516136e7565b8960200151613781565b612683576001935050505061268b565b600093505050505b92915050565b600081600001549050919050565b60006126c08473ffffffffffffffffffffffffffffffffffffffff166138e5565b6126cd5760019050612880565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127a857808201518184015260208101905061278d565b50505050905090810190601f1680156127d55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156127f757600080fd5b505af115801561280b573d6000803e3d6000fd5b505050506040513d602081101561282157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166128a882611b14565b73ffffffffffffffffffffffffffffffffffffffff1614612931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f596f752061726520746f6b656e20616e206f776e65720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b6129dd81613930565b612a24600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206139ee565b612a6b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a11565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612b756001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613a2790919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612c62576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612be257fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612c3a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612cb49190614193565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b612e2e8161227c565b15612ea1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f546f6b656e20616c72656164792065786973740000000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612f3a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a11565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561302d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061310d565b600082905060005b60008214613057578080600101915050600a828161304f57fe5b049150613035565b6060816040519080825280601f01601f19166020018201604052801561308c5781602001600182028038833980820191505090505b50905060006001830390505b6000861461310557600a86816130aa57fe5b0660300160f81b828280600190039350815181106130c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816130fd57fe5b049550613098565b819450505050505b919050565b606061314e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613a71565b905092915050565b61315e614132565b60405180604001604052807f2de773ab0474a36e74843dd48498676644053ca474f6cdaf3913d0734f0701f781526020017f0ab60519186ce941d270ab6026801b94f4a1820783a81f9a9a23359b166819118152508160000181905250604051806040016040528060405180604001604052807f1d724f17e37d154ad2cf6810ff68215eb33314993aeb7dc9b666337a6d24ee7981526020017f2dc886e3123a7303094fb251134b4720b9dc1c88c62dabcca48406089ea417ea815250815260200160405180604001604052807f2f359f17d38244c337a0d87c782b6fd352c527ab61a8b5ed6e163a05c02c8ae981526020017f23b06ed6bbb36c7f1ad41c119e6e8efc660229f4c3900765c88c306f56e7f7be8152508152508160200181905250604051806040016040528060405180604001604052807f2e090493792f139abc13264f8f023313c5b2dbc5e1baccb7ae677e974e6fbc2681526020017f14f481034e31b6d1af13acfaaaa0f515d35746f1098170a9633b957294fccf4a815250815260200160405180604001604052807f08f7aec3fd6fc5d5e852743078b3a999bd7b31216bba97066720768ef8ea4b5b81526020017f0b69f7c81741bd0ac5aaa0eeb7498f2ca86692971c5b83a8d54768ae5993ab7c8152508152508160400181905250604051806040016040528060405180604001604052807f0b9d44b082ef50952456830db86adba8fa023b785155154a6d5a916c7046a22481526020017f2073946d0bc341fc58b730de1184f1013c1dbbe8cfe1622027be0758c60bf5fe815250815260200160405180604001604052807f12da4a5e9fca3a3545ba57cb1caee98c553a30b502240b4c4de34350dacddcb281526020017f2c136493ddf06151524735f77a66a09cb9e632787e64c45a089163df83d00eeb8152508152508160600181905250600360405190808252806020026020018201604052801561344557816020015b6134326141bf565b81526020019060019003908161342a5790505b50816080018190525060405180604001604052807f20bda63768f8506a84806821893c964107903a24738b7bbef4eb184d7b78274d81526020017f02f92d9fc80c5d309b630c3190fab56cda6c5077eccebcc690f0a51dc418527981525081608001516000815181106134b457fe5b602002602001018190525060405180604001604052807f18f0702035258a916f66d5629e1339c9f7222c3f4caf9841f9a5140a5c0a280181526020017f2a687c2de601030e2f0c12bdd1687b41dd1e186371d138591ade1a42347f7434815250816080015160018151811061352557fe5b602002602001018190525060405180604001604052807f1b43bf991ae311c1168cafd719bb0cdd562e474282a1151fdee947eccf6e1c4681526020017f0defdb0e720e5f5f2cdb1e31e4b500fd47e42aeac68c137b0db4a58845f81fed815250816080015160028151811061359657fe5b602002602001018190525090565b6135ac614179565b6135b46141d9565b8360000151816000600381106135c657fe5b6020020181815250508360200151816001600381106135e157fe5b60200201818152505082816002600381106135f857fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461362157613623565bfe5b508061362e57600080fd5b505092915050565b61363e614179565b6136466141fb565b83600001518160006004811061365857fe5b60200201818152505083602001518160016004811061367357fe5b60200201818152505082600001518160026004811061368e57fe5b6020020181815250508260200151816003600481106136a957fe5b602002018181525050600060608360c08460066107d05a03fa905080600081146136d2576136d4565bfe5b50806136df57600080fd5b505092915050565b6136ef614179565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561372c575060008360200151145b1561375057604051806040016040528060008152602001600081525091505061377c565b6040518060400160405280846000015181526020018285602001518161377257fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156137c057816020015b6137ad6141bf565b8152602001906001900390816137a55790505b5090506060600460405190808252806020026020018201604052801561380057816020015b6137ed61421d565b8152602001906001900390816137e55790505b5090508a8260008151811061381157fe5b6020026020010181905250888260018151811061382a57fe5b6020026020010181905250868260028151811061384357fe5b6020026020010181905250848260038151811061385c57fe5b6020026020010181905250898160008151811061387557fe5b6020026020010181905250878160018151811061388e57fe5b602002602001018190525085816002815181106138a757fe5b602002602001018190525083816003815181106138c057fe5b60200260200101819052506138d58282613d33565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561392757506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146139eb5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613a0660018260000154613a2790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613a6983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613f86565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613acd5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613b5257888181518110613af957fe5b602001015160f81c60f81b838380600101945081518110613b1657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ae4565b600090505b8751811015613bc557878181518110613b6c57fe5b602001015160f81c60f81b838380600101945081518110613b8957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613b57565b600090505b8651811015613c3857868181518110613bdf57fe5b602001015160f81c60f81b838380600101945081518110613bfc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613bca565b600090505b8551811015613cab57858181518110613c5257fe5b602001015160f81c60f81b838380600101945081518110613c6f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613c3d565b600090505b8451811015613d1e57848181518110613cc557fe5b602001015160f81c60f81b838380600101945081518110613ce257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613cb0565b82995050505050505050505095945050505050565b60008151835114613d4357600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613d825781602001602082028038833980820191505090505b50905060008090505b83811015613f2857868181518110613d9f57fe5b602002602001015160000151826000600684020181518110613dbd57fe5b602002602001018181525050868181518110613dd557fe5b602002602001015160200151826001600684020181518110613df357fe5b602002602001018181525050858181518110613e0b57fe5b602002602001015160000151600160028110613e2357fe5b6020020151826002600684020181518110613e3a57fe5b602002602001018181525050858181518110613e5257fe5b602002602001015160000151600060028110613e6a57fe5b6020020151826003600684020181518110613e8157fe5b602002602001018181525050858181518110613e9957fe5b602002602001015160200151600160028110613eb157fe5b6020020151826004600684020181518110613ec857fe5b602002602001018181525050858181518110613ee057fe5b602002602001015160200151600060028110613ef857fe5b6020020151826005600684020181518110613f0f57fe5b6020026020010181815250508080600101915050613d8b565b50613f31614243565b6000602082602086026020860160086107d05a03fa90508060008114613f5657613f58565bfe5b5080613f6357600080fd5b600082600060018110613f7257fe5b602002015114159550505050505092915050565b6000838311158290614033576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ff8578082015181840152602081019050613fdd565b50505050905090810190601f1680156140255780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b60405180606001604052806140926141bf565b815260200161409f61421d565b81526020016140ac6141bf565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106140f357805160ff1916838001178555614121565b82800160010185558215614121579182015b82811115614120578251825591602001919060010190614105565b5b50905061412e9190614265565b5090565b6040518060a001604052806141456141bf565b815260200161415261421d565b815260200161415f61421d565b815260200161416c61421d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156141ba578183600052602060002091820191016141b99190614265565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061423061428a565b815260200161423d61428a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61428791905b8082111561428357600081600090555060010161426b565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe416464726573732063616e2774206265206f776e6572206f662074686520746f6b656ea265627a7a72315820d11e425d94752fef05b92984774a92e0321f06ef024ef00efc70c2076a28eebb64736f6c63430005100032",
  "sourceMap": "291:1685:3:-;;;19830:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:10;597:6;;:19;;;;;;;;;;;;;;;;;;631:21;641:10;631:21;;;;;;;;;;;;;;;;;;;;;;1877:5;1867:7;;:15;;;;;;;;;;;;;;;;;;1897:20;1906:10;1897:20;;;;;;;;;;;;;;;;;;;;;;2862:40;2459:10;2881:20;;2862:18;;;:40;;:::i;:::-;5008;4882:10;5027:20;;5008:18;;;:40;;:::i;:::-;12535:51;12141:10;12554:31;;12535:18;;;:51;;:::i;:::-;19979:4;19971:5;:12;;;;;;;;;;;;:::i;:::-;;20003:6;19993:7;:16;;;;;;;;;;;;:::i;:::-;;20035:12;20019:13;:28;;;;;;;;;;;;:::i;:::-;;20058:49;19641:10;20077:29;;20058:18;;;:49;;:::i;:::-;19830:284;;;291:1685:3;;3212:158:0;3302:10;3287:25;;:11;:25;;;;;3279:34;;;;;;3359:4;3323:20;:33;3344:11;3323:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3212:158;:::o;291:1685:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "291:1685:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;291:1685:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3000:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3000:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20201:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20201:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6232:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6232:226:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5591:635;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5591:635:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13300:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7435:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7435:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;946:406:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;946:406:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12966:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12966:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;22150:172:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22150:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7621:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7621:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13731:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13731:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1580:394:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1580:394:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1580:394:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1580:394:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1580:394:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1580:394:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24083:658:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;24083:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24083:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24083:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24083:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24083:658:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5352:162:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5352:162:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5061:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5061:285:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1635:112;;;:::i;:::-;;679:54:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;679:54:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:80:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20290:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20290:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6750:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:27:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;580:27:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7759:211:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7759:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7759:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7759:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7759:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7759:211:0;;;;;;;;;;;;;;;:::i;:::-;;20382:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20382:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20489:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20489:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20489:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7284:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7284:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1037:234;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1037:234:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3000:133;3070:4;3093:20;:33;3114:11;3093:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3086:40;;3000:133;;;:::o;20201:83::-;20240:13;20272:5;20265:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20201:83;:::o;6232:226::-;6291:7;6369:16;6377:7;6369;:16::i;:::-;6361:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6427:15;:24;6443:7;6427:24;;;;;;;;;;;;;;;;;;;;;6420:31;;6232:226;;;:::o;5591:635::-;5731:17;5751:16;5759:7;5751;:16::i;:::-;5731:36;;5791:9;5785:15;;:2;:15;;;;5777:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5976:9;5962:23;;:10;:23;;;:66;;;;5989:39;6006:9;6017:10;5989:16;:39::i;:::-;5962:66;5954:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6134:2;6107:15;:24;6123:7;6107:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6211:7;6207:2;6187:32;;6196:9;6187:32;;;;;;;;;;;;5591:635;;;:::o;13300:94::-;13344:7;13370:10;:17;;;;13363:24;;13300:94;:::o;7435:180::-;7525:39;7544:10;7556:7;7525:18;:39::i;:::-;7517:48;;;;;;7576:32;7590:4;7596:2;7600:7;7576:13;:32::i;:::-;7435:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;946:406:3:-;1039:25;;:::i;:::-;1067:106;;;;;;;;1097:5;1067:106;;;;1125:7;1067:106;;;;;;1158:4;1067:106;;;;;1039:134;;1212:9;1184:18;:25;1203:5;1184:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:9;1286;1271:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1271:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:33;1330:5;1337:7;1312:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:406;;;:::o;12966:182:0:-;13046:7;13081:16;13091:5;13081:9;:16::i;:::-;13073:5;:24;13065:33;;;;;;13115:12;:19;13128:5;13115:19;;;;;;;;;;;;;;;13135:5;13115:26;;;;;;;;;;;;;;;;13108:33;;12966:182;;;;:::o;14929:166:2:-;;;;:::o;22150:172:0:-;22218:4;818:6;;;;;;;;;;;804:20;;:10;:20;;;796:29;;;;;;22234:24;22246:2;22250:7;22234:11;:24::i;:::-;22268:26;22286:7;22268:17;:26::i;:::-;22311:4;22304:11;;22150:172;;;;:::o;7621:132::-;7707:39;7724:4;7730:2;7734:7;7707:39;;;;;;;;;;;;:16;:39::i;:::-;7621:132;;;:::o;13731:148::-;13789:7;13824:13;:11;:13::i;:::-;13816:5;:21;13808:30;;;;;;13855:10;13866:5;13855:17;;;;;;;;;;;;;;;;13848:24;;13731:148;;;:::o;1580:394:3:-;1774:24;1783:1;1786;1789;1792:5;1774:8;:24::i;:::-;1766:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1838:18;:25;1857:5;1838:25;;;;;;;;;;;:36;;;;;;;;;;;;1837:37;1829:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:22;1910:5;1917:10;1906:3;:22::i;:::-;1938:29;1949:10;1961:5;1938:10;:29::i;:::-;;1580:394;;;;;:::o;24083:658:4:-;24247:6;24265:18;;:::i;:::-;24303:27;;;;;;;;24319:1;24321;24319:4;;;;;;;;;;;24303:27;;;;24325:1;24327;24325:4;;;;;;;;;;;24303:27;;;24293:5;:7;;:37;;;;24350:55;;;;;;;;;;;;;;;;24367:1;24369;24367:4;;;;;;;;;;;24372:1;24367:7;;;;;;;;;;;24350:55;;;;24376:1;24378;24376:4;;;;;;;;;;;24381:1;24376:7;;;;;;;;;;;24350:55;;;;;;;;;;;;;;;24387:1;24389;24387:4;;;;;;;;;;;24392:1;24387:7;;;;;;;;;;;24350:55;;;;24396:1;24398;24396:4;;;;;;;;;;;24401:1;24396:7;;;;;;;;;;;24350:55;;;;;;24340:5;:7;;:65;;;;24425:27;;;;;;;;24441:1;24443;24441:4;;;;;;;;;;;24425:27;;;;24447:1;24449;24447:4;;;;;;;;;;;24425:27;;;24415:5;:7;;:37;;;;24462:25;24501:1;24490:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24490:13:4;;;;24462:41;;24526:6;24535:1;24526:10;;24522:88;24542:12;24538:1;:16;24522:88;;;24591:5;24597:1;24591:8;;;;;;;;;;;24574:11;24586:1;24574:14;;;;;;;;;;;;;:25;;;;;24556:3;;;;;;;24522:88;;;;24653:1;24623:26;24630:11;24643:5;24623:6;:26::i;:::-;:31;24619:116;;;24677:4;24670:11;;;;;;24619:116;24719:5;24712:12;;;;24083:658;;;;;;;:::o;5352:162:0:-;5407:7;5487:11;:20;5499:7;5487:20;;;;;;;;;;;;;;;;;;;;;5480:27;;5352:162;;;:::o;5061:285::-;5116:7;5305:34;:17;:24;5323:5;5305:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5298:41;;5061:285;;;:::o;1635:112::-;818:6;;;;;;;;;;;804:20;;:10;:20;;;796:29;;;;;;2068:7;;;;;;;;;;;2067:8;2059:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:4;1693:7;;:14;;;;;;;;;;;;;;;;;;1722:18;1729:10;1722:18;;;;;;;;;;;;;;;;;;;;;;1635:112::o;679:54:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1277:80:0:-;1318:7;1344:6;;;;;;;;;;;1337:13;;1277:80;:::o;20290:86::-;20330:13;20362:7;20355:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20290:86;:::o;6750:213::-;6835:10;6829:16;;:2;:16;;;;6821:25;;;;;;6893:8;6856:18;:30;6875:10;6856:30;;;;;;;;;;;;;;;:34;6887:2;6856:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6943:2;6916:40;;6931:10;6916:40;;;6947:8;6916:40;;;;;;;;;;;;;;;;;;;;;;6750:213;;:::o;580:27:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7759:211:0:-;7865:31;7878:4;7884:2;7888:7;7865:12;:31::i;:::-;7914:48;7937:4;7943:2;7947:7;7956:5;7914:22;:48::i;:::-;7906:57;;;;;;7759:211;;;;:::o;20382:101::-;20431:13;20463;20456:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20382:101;:::o;20489:151::-;20547:13;20580:16;20588:7;20580;:16::i;:::-;20572:25;;;;;;20614:10;:19;20625:7;20614:19;;;;;;;;;;;20607:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20489:151;;;:::o;7284:145::-;7364:4;7387:18;:25;7406:5;7387:25;;;;;;;;;;;;;;;:35;7413:8;7387:35;;;;;;;;;;;;;;;;;;;;;;;;;7380:42;;7284:145;;;;:::o;1037:234::-;818:6;;;;;;;;;;;804:20;;:10;:20;;;796:29;;;;;;1256:8;1247:6;;:17;;;;;;;;;;;;;;;;;;1037:234;:::o;8164:152::-;8221:4;8237:13;8253:11;:20;8265:7;8253:20;;;;;;;;;;;;;;;;;;;;;8237:36;;8307:1;8290:19;;:5;:19;;;;8283:26;;;8164:152;;;:::o;8676:246::-;8761:4;8777:13;8793:16;8801:7;8793;:16::i;:::-;8777:32;;8838:5;8827:16;;:7;:16;;;:51;;;;8871:7;8847:31;;:20;8859:7;8847:11;:20::i;:::-;:31;;;8827:51;:87;;;;8882:32;8899:5;8906:7;8882:16;:32::i;:::-;8827:87;8819:96;;;8676:246;;;;:::o;14254:239::-;14339:38;14359:4;14365:2;14369:7;14339:19;:38::i;:::-;14388:47;14421:4;14427:7;14388:32;:47::i;:::-;14446:40;14474:2;14478:7;14446:27;:40::i;:::-;14254:239;;;:::o;14748:196::-;14811:24;14823:2;14827:7;14811:11;:24::i;:::-;14846:40;14874:2;14878:7;14846:27;:40::i;:::-;14897;14929:7;14897:31;:40::i;:::-;14748:196;;:::o;21117:264::-;21179:16;21187:7;21179;:16::i;:::-;21171:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21230:26;21259:31;21282:7;21259:22;:31::i;:::-;21230:60;;21322:52;21346:13;21322:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21361:12;21322:23;:52::i;:::-;21300:10;:19;21311:7;21300:19;;;;;;;;;;;:74;;;;;;;;;;;;:::i;:::-;;21117:264;;:::o;23157:921:4:-;23237:4;23253:26;23282:77;23253:106;;23369:22;;:::i;:::-;23394:14;:12;:14::i;:::-;23369:39;;23446:2;:12;;;:19;23441:1;23426:5;:12;:16;:39;23418:48;;;;;;23523:27;;:::i;:::-;23553:21;;;;;;;;23569:1;23553:21;;;;23572:1;23553:21;;;23523:51;;23589:6;23598:1;23589:10;;23584:197;23605:5;:12;23601:1;:16;23584:197;;;23657:18;23646:5;23652:1;23646:8;;;;;;;;;;;;;;:29;23638:38;;;;;;23697:73;23714:4;23720:49;23739:2;:12;;;23756:1;23752;:5;23739:19;;;;;;;;;;;;;;23760:5;23766:1;23760:8;;;;;;;;;;;;;;23720:18;:49::i;:::-;23697:16;:73::i;:::-;23690:80;;23619:3;;;;;;;23584:197;;;;23797:39;23814:4;23820:2;:12;;;23833:1;23820:15;;;;;;;;;;;;;;23797:16;:39::i;:::-;23790:46;;23850:193;23885:5;:7;;;23894:5;:7;;;23916:20;23931:4;23916:14;:20::i;:::-;23938:2;:8;;;23961:23;23976:5;:7;;;23961:14;:23::i;:::-;23986:2;:8;;;24009:24;24024:2;:8;;;24009:14;:24::i;:::-;24035:2;:7;;;23850:20;:193::i;:::-;23846:207;;24052:1;24045:8;;;;;;;23846:207;24070:1;24063:8;;;;;23157:921;;;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;10986:347:0:-;11107:4;11132:15;:2;:13;;;:15::i;:::-;11127:58;;11170:4;11163:11;;;;11127:58;11195:13;11227:2;11211:36;;;11248:10;11260:4;11266:7;11275:5;11211:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11211:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11211:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11211:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11211:70:0;;;;;;;;;;;;;;;;11195:86;;4015:10;11309:16;;11299:26;;;:6;:26;;;;11291:35;;;10986:347;;;;;;;:::o;9774:684::-;9957:4;9937:24;;:16;9945:7;9937;:16::i;:::-;:24;;;9929:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10088:1;10074:16;;:2;:16;;;;10066:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10152:23;10167:7;10152:14;:23::i;:::-;10260:35;:17;:23;10278:4;10260:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10305:33;:17;:21;10323:2;10305:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10371:2;10348:11;:20;10360:7;10348:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10443:7;10439:2;10424:27;;10433:4;10424:27;;;;;;;;;;;;9774:684;;;:::o;16720:1128::-;16982:22;17007:32;17037:1;17007:12;:18;17020:4;17007:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;16982:57;;17049:18;17070:17;:26;17088:7;17070:26;;;;;;;;;;;;17049:47;;17214:14;17200:10;:28;17196:323;;17244:19;17266:12;:18;17279:4;17266:18;;;;;;;;;;;;;;;17285:14;17266:34;;;;;;;;;;;;;;;;17244:56;;17348:11;17315:12;:18;17328:4;17315:18;;;;;;;;;;;;;;;17334:10;17315:30;;;;;;;;;;;;;;;:44;;;;17464:10;17431:17;:30;17449:11;17431:30;;;;;;;;;;;:43;;;;17196:323;;17605:12;:18;17618:4;17605:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16720:1128;;;;:::o;15566:183::-;15679:12;:16;15692:2;15679:16;;;;;;;;;;;;;;;:23;;;;15650:17;:26;15668:7;15650:26;;;;;;;;;;;:52;;;;15712:12;:16;15725:2;15712:16;;;;;;;;;;;;;;;15734:7;15712:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15712:30:0;;;;;;;;;;;;;;;;;;;;;;15566:183;;:::o;9079:496::-;9247:1;9233:16;;:2;:16;;;;9225:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9288:16;9296:7;9288;:16::i;:::-;9287:17;9279:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9439:2;9416:11;:20;9428:7;9416:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9451:33;:17;:21;9469:2;9451:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9560:7;9556:2;9535:33;;9544:10;9535:33;;;;;;;;;;;;9079:496;;:::o;15944:161::-;16047:10;:17;;;;16020:15;:24;16036:7;16020:24;;;;;;;;;;;:44;;;;16074:10;16090:7;16074:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16074:24:0;;;;;;;;;;;;;;;;;;;;;;15944:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;21201:1951:4:-;21248:22;;:::i;:::-;21293:169;;;;;;;;21317:66;21293:169;;;;21394:66;21293:169;;;21282:2;:8;;:180;;;;21482:327;;;;;;;;;;;;;;;;21507:66;21482:327;;;;21584:66;21482:327;;;;;;;;;;;;;;;21663:66;21482:327;;;;21740:66;21482:327;;;;;;21472:2;:7;;:337;;;;21830:327;;;;;;;;;;;;;;;;21855:66;21830:327;;;;21932:66;21830:327;;;;;;;;;;;;;;;22011:66;21830:327;;;;22088:66;21830:327;;;;;;21819:2;:8;;:338;;;;22178:327;;;;;;;;;;;;;;;;22203:66;22178:327;;;;22280:66;22178:327;;;;;;;;;;;;;;;22359:66;22178:327;;;;22436:66;22178:327;;;;;;22167:2;:8;;:338;;;;22552:1;22530:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22515:2;:12;;:39;;;;22582:169;;;;;;;;22606:66;22582:169;;;;22683:66;22582:169;;;22564:2;:12;;;22577:1;22564:15;;;;;;;;;;;;;:187;;;;22779:169;;;;;;;;22803:66;22779:169;;;;22880:66;22779:169;;;22761:2;:12;;;22774:1;22761:15;;;;;;;;;;;;;:187;;;;22976:169;;;;;;;;23000:66;22976:169;;;;23077:66;22976:169;;;22958:2;:12;;;22971:1;22958:15;;;;;;;;;;;;;:187;;;;21201:1951;:::o;17702:454::-;17771:16;;:::i;:::-;17799:20;;:::i;:::-;17840:1;:3;;;17829:5;17835:1;17829:8;;;;;;;;;;:14;;;;;17864:1;:3;;;17853:5;17859:1;17853:8;;;;;;;;;;:14;;;;;17888:1;17877:5;17883:1;17877:8;;;;;;;;;;:12;;;;;17899;18003:4;18000:1;17994:4;17987:5;17984:1;17977:4;17970:5;17966:16;17955:53;17944:64;;18085:7;18098:1;18093:20;;;;18078:35;;18093:20;18102:9;18078:35;;18141:7;18132:17;;;;;;17702:454;;;;;;:::o;16771:493::-;16850:16;;:::i;:::-;16878:20;;:::i;:::-;16919:2;:4;;;16908:5;16914:1;16908:8;;;;;;;;;;:15;;;;;16944:2;:4;;;16933:5;16939:1;16933:8;;;;;;;;;;:15;;;;;16969:2;:4;;;16958:5;16964:1;16958:8;;;;;;;;;;:15;;;;;16994:2;:4;;;16983:5;16989:1;16983:8;;;;;;;;;;:15;;;;;17008:12;17112:4;17109:1;17103:4;17096:5;17093:1;17086:4;17079:5;17075:16;17064:53;17053:64;;17194:7;17207:1;17202:20;;;;17187:35;;17202:20;17211:9;17187:35;;17249:7;17241:16;;;;;;16771:493;;;;;;:::o;16380:340::-;16437:14;;:::i;:::-;16515:6;16524:77;16515:86;;16622:1;16615;:3;;;:8;:20;;;;;16634:1;16627;:3;;;:8;16615:20;16611:58;;;16656:13;;;;;;;;16664:1;16656:13;;;;16667:1;16656:13;;;16649:20;;;;;16611:58;16686:27;;;;;;;;16694:1;:3;;;16686:27;;;;16710:1;16704;:3;;;:7;;;;;;16699:1;:13;16686:27;;;16679:34;;;16380:340;;;;:::o;20298:552::-;20549:4;20565:19;20601:1;20587:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20565:38;;20613:19;20649:1;20635:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20613:38;;20669:2;20661;20664:1;20661:5;;;;;;;;;;;;;:10;;;;20689:2;20681;20684:1;20681:5;;;;;;;;;;;;;:10;;;;20709:2;20701;20704:1;20701:5;;;;;;;;;;;;;:10;;;;20729:2;20721;20724:1;20721:5;;;;;;;;;;;;;:10;;;;20749:2;20741;20744:1;20741:5;;;;;;;;;;;;;:10;;;;20769:2;20761;20764:1;20761:5;;;;;;;;;;;;;:10;;;;20789:2;20781;20784:1;20781:5;;;;;;;;;;;;;:10;;;;20809:2;20801;20804:1;20801:5;;;;;;;;;;;;;:10;;;;20828:15;20836:2;20840;20828:7;:15::i;:::-;20821:22;;;;20298:552;;;;;;;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11414:171:0:-;11513:1;11477:38;;:15;:24;11493:7;11477:24;;;;;;;;;;;;;;;;;;;;;:38;;;11473:106;;11566:1;11531:15;:24;11547:7;11531:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11473:106;11414:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;18367:923:4:-;18449:4;18486:2;:9;18473:2;:9;:22;18465:31;;;;;;18506:13;18522:2;:9;18506:25;;18541:14;18569:1;18558:8;:12;18541:29;;18580:19;18613:9;18602:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18602:21:4;;;;18580:43;;18638:6;18647:1;18638:10;;18633:307;18654:8;18650:1;:12;18633:307;;;18710:2;18713:1;18710:5;;;;;;;;;;;;;;:7;;;18691:5;18705:1;18701;18697;:5;:9;18691:16;;;;;;;;;;;;;:26;;;;;18750:2;18753:1;18750:5;;;;;;;;;;;;;;:7;;;18731:5;18745:1;18741;18737;:5;:9;18731:16;;;;;;;;;;;;;:26;;;;;18790:2;18793:1;18790:5;;;;;;;;;;;;;;:7;;;18798:1;18790:10;;;;;;;;;;;18771:5;18785:1;18781;18777;:5;:9;18771:16;;;;;;;;;;;;;:29;;;;;18833:2;18836:1;18833:5;;;;;;;;;;;;;;:7;;;18841:1;18833:10;;;;;;;;;;;18814:5;18828:1;18824;18820;:5;:9;18814:16;;;;;;;;;;;;;:29;;;;;18876:2;18879:1;18876:5;;;;;;;;;;;;;;:7;;;18884:1;18876:10;;;;;;;;;;;18857:5;18871:1;18867;18863;:5;:9;18857:16;;;;;;;;;;;;;:29;;;;;18919:2;18922:1;18919:5;;;;;;;;;;;;;;:7;;;18927:1;18919:10;;;;;;;;;;;18900:5;18914:1;18910;18906;:5;:9;18900:16;;;;;;;;;;;;;:29;;;;;18664:3;;;;;;;18633:307;;;;18949:18;;:::i;:::-;18977:12;19110:4;19105:3;19098:4;19087:9;19083:20;19076:4;19069:5;19065:16;19062:1;19055:4;19048:5;19044:16;19033:82;19022:93;;19192:7;19205:1;19200:20;;;;19185:35;;19200:20;19209:9;19185:35;;19247:7;19239:16;;;;;;19282:1;19272:3;19276:1;19272:6;;;;;;;;;;;:11;;19265:18;;;;;;;18367:923;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;291:1685:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;291:1685:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;291:1685:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;291:1685:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;291:1685:3;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport './Verifier.sol';\nimport './ERC721Mintable.sol';\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address account;\n        bool isSubmited;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] public solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(uint256 => Solution) public submittedSolutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionSubmitted(uint256 index, address account);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function add(uint256 index, address account) public {\n        // create new soultion\n        Solution memory addNewSol = Solution({\n            index: index,\n            account: account,\n            isSubmited: true\n        });\n\n        submittedSolutions[index] = addNewSol;\n\n        // push to submitted soultions\n        solutions.push(addNewSol);\n\n        emit SolutionSubmitted(index, account);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n\n    function mintSol(\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory input,\n        uint256 index\n    ) public {\n        require(verifyTx(a, b, c, input), \"Invalid solution\");\n        require(!submittedSolutions[index].isSubmited, \"Already submitted\");\n        add(index, msg.sender);\n        super.mint(msg.sender, index);\n    }\n}\n",
  "sourcePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7549
      ]
    },
    "id": 7550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7432,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7433,
        "nodeType": "ImportDirective",
        "scope": 7550,
        "sourceUnit": 10100,
        "src": "132:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7434,
        "nodeType": "ImportDirective",
        "scope": 7550,
        "sourceUnit": 1106,
        "src": "157:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7435,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1105,
              "src": "322:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1105",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7436,
            "nodeType": "InheritanceSpecifier",
            "src": "322:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7437,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10099,
              "src": "341:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10099",
                "typeString": "contract Verifier"
              }
            },
            "id": 7438,
            "nodeType": "InheritanceSpecifier",
            "src": "341:8:3"
          }
        ],
        "contractDependencies": [
          58,
          120,
          166,
          658,
          956,
          1072,
          1105,
          7430,
          10099
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7549,
        "linearizedBaseContracts": [
          7549,
          10099,
          1105,
          1072,
          7430,
          956,
          658,
          166,
          120,
          58
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7445,
            "members": [
              {
                "constant": false,
                "id": 7440,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7445,
                "src": "456:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7439,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7442,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7445,
                "src": "479:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7441,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7444,
                "name": "isSubmited",
                "nodeType": "VariableDeclaration",
                "scope": 7445,
                "src": "504:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7443,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "504:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7549,
            "src": "430:96:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7448,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7549,
            "src": "580:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7445_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7446,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7445,
                "src": "580:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7445_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7447,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "580:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7445_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7452,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7549,
            "src": "679:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7445_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7451,
              "keyType": {
                "id": 7449,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "687:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "679:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7445_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7450,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7445,
                "src": "698:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7445_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7458,
            "name": "SolutionSubmitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7454,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "825:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7456,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "840:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "824:32:3"
            },
            "src": "801:56:3"
          },
          {
            "body": {
              "id": 7490,
              "nodeType": "Block",
              "src": "998:354:3",
              "statements": [
                {
                  "assignments": [
                    7466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7466,
                      "name": "addNewSol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7490,
                      "src": "1039:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7445_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7465,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7445,
                        "src": "1039:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7445_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7472,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7468,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7460,
                        "src": "1097:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7469,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7462,
                        "src": "1125:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1158:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7467,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7445,
                      "src": "1067:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7445_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "account",
                      "isSubmited"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1067:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7445_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:134:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7473,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7452,
                        "src": "1184:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7445_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7475,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7474,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7460,
                        "src": "1203:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1184:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7445_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7476,
                      "name": "addNewSol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "1212:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7445_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1184:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7445_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7478,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7482,
                        "name": "addNewSol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "1286:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7445_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7445_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7479,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7448,
                        "src": "1271:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7445_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1271:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7445_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7484,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:25:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7486,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7460,
                        "src": "1330:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7487,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7462,
                        "src": "1337:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7485,
                      "name": "SolutionSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7458,
                      "src": "1312:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7489,
                  "nodeType": "EmitStatement",
                  "src": "1307:38:3"
                }
              ]
            },
            "documentation": null,
            "id": 7491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7460,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7491,
                  "src": "959:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7462,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7491,
                  "src": "974:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "958:32:3"
            },
            "returnParameters": {
              "id": 7464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:3"
            },
            "scope": 7549,
            "src": "946:406:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7547,
              "nodeType": "Block",
              "src": "1756:218:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7516,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7495,
                            "src": "1783:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7517,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7501,
                            "src": "1786:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7518,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7505,
                            "src": "1789:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7519,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7509,
                            "src": "1792:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7515,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10098,
                          "src": "1774:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1774:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420736f6c7574696f6e",
                        "id": 7521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1800:18:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fc2014ba9a40ba2b21b93830a638d7f4c58bf42948fc1e371deb5ab5cde1600",
                          "typeString": "literal_string \"Invalid solution\""
                        },
                        "value": "Invalid solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fc2014ba9a40ba2b21b93830a638d7f4c58bf42948fc1e371deb5ab5cde1600",
                          "typeString": "literal_string \"Invalid solution\""
                        }
                      ],
                      "id": 7514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10444,
                        10445
                      ],
                      "referencedDeclaration": 10445,
                      "src": "1766:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7523,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1837:37:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7525,
                              "name": "submittedSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7452,
                              "src": "1838:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7445_storage_$",
                                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7527,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7526,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7511,
                              "src": "1857:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1838:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7445_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7528,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isSubmited",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7444,
                          "src": "1838:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c7265616479207375626d6974746564",
                        "id": 7530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1876:19:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c3ff693af574920b902c739da4c5d76b68bd56813883ac997b3ef61af8d3581",
                          "typeString": "literal_string \"Already submitted\""
                        },
                        "value": "Already submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c3ff693af574920b902c739da4c5d76b68bd56813883ac997b3ef61af8d3581",
                          "typeString": "literal_string \"Already submitted\""
                        }
                      ],
                      "id": 7524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10444,
                        10445
                      ],
                      "referencedDeclaration": 10445,
                      "src": "1829:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7534,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "1910:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7535,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10441,
                          "src": "1917:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1917:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7533,
                      "name": "add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7491,
                      "src": "1906:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7542,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10441,
                          "src": "1949:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1949:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "1961:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7539,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10498,
                        "src": "1938:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7549",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1104,
                      "src": "1938:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1938:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7546,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 7548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintSol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7495,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "1606:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7492,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1606:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7494,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1614:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1606:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7501,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "1635:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1635:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7498,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1643:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1635:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7500,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1646:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1635:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7505,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "1667:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7502,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1667:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7504,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1675:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1667:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7509,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "1696:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7506,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1696:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7508,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1704:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1696:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7511,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7548,
                  "src": "1729:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1596:152:3"
            },
            "returnParameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:3"
            },
            "scope": 7549,
            "src": "1580:394:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7550,
        "src": "291:1685:3"
      }
    ],
    "src": "0:1977:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7549
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 7432,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 10100,
          "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7550,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7433,
        "name": "ImportDirective",
        "src": "132:24:3"
      },
      {
        "attributes": {
          "SourceUnit": 1106,
          "absolutePath": "/Users/bberta/playground/nanodegree_programe/Etherum/Capstone/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7550,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7434,
        "name": "ImportDirective",
        "src": "157:30:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            58,
            120,
            166,
            658,
            956,
            1072,
            1105,
            7430,
            10099
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7549,
            10099,
            1105,
            1072,
            7430,
            956,
            658,
            166,
            120,
            58
          ],
          "name": "SolnSquareVerifier",
          "scope": 7550
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1105,
                  "type": "contract CustomERC721Token"
                },
                "id": 7435,
                "name": "UserDefinedTypeName",
                "src": "322:17:3"
              }
            ],
            "id": 7436,
            "name": "InheritanceSpecifier",
            "src": "322:17:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10099,
                  "type": "contract Verifier"
                },
                "id": 7437,
                "name": "UserDefinedTypeName",
                "src": "341:8:3"
              }
            ],
            "id": 7438,
            "name": "InheritanceSpecifier",
            "src": "341:8:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7549,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7445,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7439,
                    "name": "ElementaryTypeName",
                    "src": "456:7:3"
                  }
                ],
                "id": 7440,
                "name": "VariableDeclaration",
                "src": "456:13:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "account",
                  "scope": 7445,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7441,
                    "name": "ElementaryTypeName",
                    "src": "479:7:3"
                  }
                ],
                "id": 7442,
                "name": "VariableDeclaration",
                "src": "479:15:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "isSubmited",
                  "scope": 7445,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7443,
                    "name": "ElementaryTypeName",
                    "src": "504:4:3"
                  }
                ],
                "id": 7444,
                "name": "VariableDeclaration",
                "src": "504:15:3"
              }
            ],
            "id": 7445,
            "name": "StructDefinition",
            "src": "430:96:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7549,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7445,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7446,
                    "name": "UserDefinedTypeName",
                    "src": "580:8:3"
                  }
                ],
                "id": 7447,
                "name": "ArrayTypeName",
                "src": "580:10:3"
              }
            ],
            "id": 7448,
            "name": "VariableDeclaration",
            "src": "580:27:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submittedSolutions",
              "scope": 7549,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7449,
                    "name": "ElementaryTypeName",
                    "src": "687:7:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7445,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7450,
                    "name": "UserDefinedTypeName",
                    "src": "698:8:3"
                  }
                ],
                "id": 7451,
                "name": "Mapping",
                "src": "679:28:3"
              }
            ],
            "id": 7452,
            "name": "VariableDeclaration",
            "src": "679:54:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionSubmitted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7453,
                        "name": "ElementaryTypeName",
                        "src": "825:7:3"
                      }
                    ],
                    "id": 7454,
                    "name": "VariableDeclaration",
                    "src": "825:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "account",
                      "scope": 7458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7455,
                        "name": "ElementaryTypeName",
                        "src": "840:7:3"
                      }
                    ],
                    "id": 7456,
                    "name": "VariableDeclaration",
                    "src": "840:15:3"
                  }
                ],
                "id": 7457,
                "name": "ParameterList",
                "src": "824:32:3"
              }
            ],
            "id": 7458,
            "name": "EventDefinition",
            "src": "801:56:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "add",
              "scope": 7549,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7491,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7459,
                        "name": "ElementaryTypeName",
                        "src": "959:7:3"
                      }
                    ],
                    "id": 7460,
                    "name": "VariableDeclaration",
                    "src": "959:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 7491,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7461,
                        "name": "ElementaryTypeName",
                        "src": "974:7:3"
                      }
                    ],
                    "id": 7462,
                    "name": "VariableDeclaration",
                    "src": "974:15:3"
                  }
                ],
                "id": 7463,
                "name": "ParameterList",
                "src": "958:32:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7464,
                "name": "ParameterList",
                "src": "998:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7466
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "addNewSol",
                          "scope": 7490,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7445,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7465,
                            "name": "UserDefinedTypeName",
                            "src": "1039:8:3"
                          }
                        ],
                        "id": 7466,
                        "name": "VariableDeclaration",
                        "src": "1039:25:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "account",
                            "isSubmited"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7445,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7467,
                            "name": "Identifier",
                            "src": "1067:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7460,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7468,
                            "name": "Identifier",
                            "src": "1097:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7462,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 7469,
                            "name": "Identifier",
                            "src": "1125:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7470,
                            "name": "Literal",
                            "src": "1158:4:3"
                          }
                        ],
                        "id": 7471,
                        "name": "FunctionCall",
                        "src": "1067:106:3"
                      }
                    ],
                    "id": 7472,
                    "name": "VariableDeclarationStatement",
                    "src": "1039:134:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7452,
                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "submittedSolutions"
                                },
                                "id": 7473,
                                "name": "Identifier",
                                "src": "1184:18:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7460,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 7474,
                                "name": "Identifier",
                                "src": "1203:5:3"
                              }
                            ],
                            "id": 7475,
                            "name": "IndexAccess",
                            "src": "1184:25:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7466,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "addNewSol"
                            },
                            "id": 7476,
                            "name": "Identifier",
                            "src": "1212:9:3"
                          }
                        ],
                        "id": 7477,
                        "name": "Assignment",
                        "src": "1184:37:3"
                      }
                    ],
                    "id": 7478,
                    "name": "ExpressionStatement",
                    "src": "1184:37:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7445_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7448,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutions"
                                },
                                "id": 7479,
                                "name": "Identifier",
                                "src": "1271:9:3"
                              }
                            ],
                            "id": 7481,
                            "name": "MemberAccess",
                            "src": "1271:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7466,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "addNewSol"
                            },
                            "id": 7482,
                            "name": "Identifier",
                            "src": "1286:9:3"
                          }
                        ],
                        "id": 7483,
                        "name": "FunctionCall",
                        "src": "1271:25:3"
                      }
                    ],
                    "id": 7484,
                    "name": "ExpressionStatement",
                    "src": "1271:25:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7458,
                              "type": "function (uint256,address)",
                              "value": "SolutionSubmitted"
                            },
                            "id": 7485,
                            "name": "Identifier",
                            "src": "1312:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7460,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7486,
                            "name": "Identifier",
                            "src": "1330:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7462,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 7487,
                            "name": "Identifier",
                            "src": "1337:7:3"
                          }
                        ],
                        "id": 7488,
                        "name": "FunctionCall",
                        "src": "1312:33:3"
                      }
                    ],
                    "id": 7489,
                    "name": "EmitStatement",
                    "src": "1307:38:3"
                  }
                ],
                "id": 7490,
                "name": "Block",
                "src": "998:354:3"
              }
            ],
            "id": 7491,
            "name": "FunctionDefinition",
            "src": "946:406:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintSol",
              "scope": 7549,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7548,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7492,
                            "name": "ElementaryTypeName",
                            "src": "1606:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7493,
                            "name": "Literal",
                            "src": "1614:1:3"
                          }
                        ],
                        "id": 7494,
                        "name": "ArrayTypeName",
                        "src": "1606:10:3"
                      }
                    ],
                    "id": 7495,
                    "name": "VariableDeclaration",
                    "src": "1606:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7548,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7496,
                                "name": "ElementaryTypeName",
                                "src": "1635:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7497,
                                "name": "Literal",
                                "src": "1643:1:3"
                              }
                            ],
                            "id": 7498,
                            "name": "ArrayTypeName",
                            "src": "1635:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7499,
                            "name": "Literal",
                            "src": "1646:1:3"
                          }
                        ],
                        "id": 7500,
                        "name": "ArrayTypeName",
                        "src": "1635:13:3"
                      }
                    ],
                    "id": 7501,
                    "name": "VariableDeclaration",
                    "src": "1635:22:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7548,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7502,
                            "name": "ElementaryTypeName",
                            "src": "1667:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7503,
                            "name": "Literal",
                            "src": "1675:1:3"
                          }
                        ],
                        "id": 7504,
                        "name": "ArrayTypeName",
                        "src": "1667:10:3"
                      }
                    ],
                    "id": 7505,
                    "name": "VariableDeclaration",
                    "src": "1667:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7548,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7506,
                            "name": "ElementaryTypeName",
                            "src": "1696:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7507,
                            "name": "Literal",
                            "src": "1704:1:3"
                          }
                        ],
                        "id": 7508,
                        "name": "ArrayTypeName",
                        "src": "1696:10:3"
                      }
                    ],
                    "id": 7509,
                    "name": "VariableDeclaration",
                    "src": "1696:23:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7548,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7510,
                        "name": "ElementaryTypeName",
                        "src": "1729:7:3"
                      }
                    ],
                    "id": 7511,
                    "name": "VariableDeclaration",
                    "src": "1729:13:3"
                  }
                ],
                "id": 7512,
                "name": "ParameterList",
                "src": "1596:152:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7513,
                "name": "ParameterList",
                "src": "1756:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4fc2014ba9a40ba2b21b93830a638d7f4c58bf42948fc1e371deb5ab5cde1600",
                                  "typeString": "literal_string \"Invalid solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10444,
                                10445
                              ],
                              "referencedDeclaration": 10445,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7514,
                            "name": "Identifier",
                            "src": "1766:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10098,
                                  "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7515,
                                "name": "Identifier",
                                "src": "1774:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7495,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7516,
                                "name": "Identifier",
                                "src": "1783:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7501,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7517,
                                "name": "Identifier",
                                "src": "1786:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7505,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7518,
                                "name": "Identifier",
                                "src": "1789:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7509,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7519,
                                "name": "Identifier",
                                "src": "1792:5:3"
                              }
                            ],
                            "id": 7520,
                            "name": "FunctionCall",
                            "src": "1774:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "496e76616c696420736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Invalid solution\"",
                              "value": "Invalid solution"
                            },
                            "id": 7521,
                            "name": "Literal",
                            "src": "1800:18:3"
                          }
                        ],
                        "id": 7522,
                        "name": "FunctionCall",
                        "src": "1766:53:3"
                      }
                    ],
                    "id": 7523,
                    "name": "ExpressionStatement",
                    "src": "1766:53:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9c3ff693af574920b902c739da4c5d76b68bd56813883ac997b3ef61af8d3581",
                                  "typeString": "literal_string \"Already submitted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10444,
                                10445
                              ],
                              "referencedDeclaration": 10445,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7524,
                            "name": "Identifier",
                            "src": "1829:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isSubmited",
                                  "referencedDeclaration": 7444,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7452,
                                          "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "submittedSolutions"
                                        },
                                        "id": 7525,
                                        "name": "Identifier",
                                        "src": "1838:18:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7511,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 7526,
                                        "name": "Identifier",
                                        "src": "1857:5:3"
                                      }
                                    ],
                                    "id": 7527,
                                    "name": "IndexAccess",
                                    "src": "1838:25:3"
                                  }
                                ],
                                "id": 7528,
                                "name": "MemberAccess",
                                "src": "1838:36:3"
                              }
                            ],
                            "id": 7529,
                            "name": "UnaryOperation",
                            "src": "1837:37:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "416c7265616479207375626d6974746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Already submitted\"",
                              "value": "Already submitted"
                            },
                            "id": 7530,
                            "name": "Literal",
                            "src": "1876:19:3"
                          }
                        ],
                        "id": 7531,
                        "name": "FunctionCall",
                        "src": "1829:67:3"
                      }
                    ],
                    "id": 7532,
                    "name": "ExpressionStatement",
                    "src": "1829:67:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7491,
                              "type": "function (uint256,address)",
                              "value": "add"
                            },
                            "id": 7533,
                            "name": "Identifier",
                            "src": "1906:3:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7511,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7534,
                            "name": "Identifier",
                            "src": "1910:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10441,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7535,
                                "name": "Identifier",
                                "src": "1917:3:3"
                              }
                            ],
                            "id": 7536,
                            "name": "MemberAccess",
                            "src": "1917:10:3"
                          }
                        ],
                        "id": 7537,
                        "name": "FunctionCall",
                        "src": "1906:22:3"
                      }
                    ],
                    "id": 7538,
                    "name": "ExpressionStatement",
                    "src": "1906:22:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1104,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10498,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7539,
                                "name": "Identifier",
                                "src": "1938:5:3"
                              }
                            ],
                            "id": 7541,
                            "name": "MemberAccess",
                            "src": "1938:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10441,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7542,
                                "name": "Identifier",
                                "src": "1949:3:3"
                              }
                            ],
                            "id": 7543,
                            "name": "MemberAccess",
                            "src": "1949:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7511,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 7544,
                            "name": "Identifier",
                            "src": "1961:5:3"
                          }
                        ],
                        "id": 7545,
                        "name": "FunctionCall",
                        "src": "1938:29:3"
                      }
                    ],
                    "id": 7546,
                    "name": "ExpressionStatement",
                    "src": "1938:29:3"
                  }
                ],
                "id": 7547,
                "name": "Block",
                "src": "1756:218:3"
              }
            ],
            "id": 7548,
            "name": "FunctionDefinition",
            "src": "1580:394:3"
          }
        ],
        "id": 7549,
        "name": "ContractDefinition",
        "src": "291:1685:3"
      }
    ],
    "id": 7550,
    "name": "SourceUnit",
    "src": "0:1977:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x4a8894Bb69Fd5BdbFadE3A42DD9be35aB76E03f0",
      "transactionHash": "0x82f3a331d9754e7852560696bf9f08b52b06b95a5f51b0bf4ccf61059d0dc6df"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-05T09:19:38.374Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}